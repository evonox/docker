
.DockerTS-FrameHeader {
    display: grid;
    grid-template-columns: 1fr auto;

    box-sizing: border-box;
    height: 1.5rem;

    overflow: hidden;
    align-items: center;
    align-content: center;

    user-select: none;

    color: var(--docker-ts-inactive-on-color);
    background: var(--docker-ts-inactive-color);
}

.DockerTS-FrameHeader--Selected {
    color: var(--docker-ts-primary-on-color);
    background: var(--docker-ts-primary-color);
}

.DockerTS-HeaderTitleBar {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    align-content: center;

    cursor: pointer;

    column-gap: 7px;

    box-sizing: border-box;
    padding: 3px 4px;
}

.DockerTS-HeaderTitleText {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.DockerTS-PanelContent {
    display: grid;
    grid-template-rows: 100%;
    grid-auto-columns: 100%;
}

/* CSS Class Hosting the panel header and content */
.DockerTS-ContentFrame {
    z-index: 1;
    position: absolute;
    display: grid;
    grid-template-rows: auto 1fr;

}

.DockerTS-ContentFrame--Dragging {
    opacity: 0.7;
}

.DockerTS-ContentFrame.DockerTS-ContentFrame--NoHeader {
    grid-template-rows: 100%;
}

.DockerTS-ContentFrame.DockerTS-ContentFrame--Minimized {
    right: 0;
    bottom: 0;
    width: var(--docker-ts-minimized-width);
    height: auto;
}

.DockerTS-ContentFrame.DockerTS-ContentFrame--Minimized > div:nth-child(2) {
    visibility: collapse;
}

/* Note: We need to remove the client content out of document flow. */
/* In case it overflows we do not want to interfere the layout of the whole DockerTS library */
.DockerTS-ContentContainer {
    position: relative;
}

.DockerTS-ContentHost {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    background: whitesmoke;
}
